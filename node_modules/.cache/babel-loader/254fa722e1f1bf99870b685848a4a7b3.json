{"ast":null,"code":"var _jsxFileName = \"C:\\\\lerning\\\\react\\\\flashcard\\\\hagasha\\\\src\\\\components\\\\CountryList.js\";\n//import { render } from '@testing-library/react';\nimport React from 'react';\nimport Cards from './Cards';\nimport { min, max } from './Colorselect'; //import {text}  from './Search.js'\n//import Search from './Search.js'\n\nfunction CountryList({\n  cards\n}) {\n  // const tree = props.text;\n  //   const search =`${text ? text : 'test'}`\n  // const search = `${props.serachVal ? props.serachVal : ''}`\n  // console.log('')\n  // this.State({search : '' });  onClick={() => setFlip(!flip)}>\n  //  const [temp, setsearch] = useState(false)\n  // const search1 = `${text ? setsearch(text) : ''}`\n  // console.log(search);\n  //  console.log(props.serccc); \n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, cards.filter(count => count.deaths > min && count.deaths < max).filter(cards => cards.countery.includes('')).map(cards => {\n    // console.log(tree) ;\n    //   console.log(search);                                           \n    return /*#__PURE__*/React.createElement(Cards, {\n      cards: cards,\n      key: cards.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }\n    });\n  }));\n}\n\nexport default CountryList; // if ( cards.deaths > min && cards.deaths < max ){   count.deaths > min && count.deaths < max &&\n// let filterd = cards.filter(cards => cards.country.includes('I'))","map":{"version":3,"sources":["C:/lerning/react/flashcard/hagasha/src/components/CountryList.js"],"names":["React","Cards","min","max","CountryList","cards","filter","count","deaths","countery","includes","map","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,EAAYC,GAAZ,QAAsB,eAAtB,C,CACA;AACA;;AAEC,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA8B;AAC5B;AACF;AACE;AACA;AACC;AACF;AAEC;AACD;AACD;AACG,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAeN,GAAf,IAAsBK,KAAK,CAACC,MAAN,GAAeL,GAA3D,EACCG,MADD,CACQD,KAAK,IAAIA,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwB,EAAxB,CADjB,EAEAC,GAFA,CAEIN,KAAK,IAAI;AAEV;AACF;AACD,wBAAQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAqB,MAAA,GAAG,EAAEA,KAAK,CAACO,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAPC,CADL,CAFJ;AAcH;;AAED,eAAeR,WAAf,C,CAEA;AAEe","sourcesContent":["//import { render } from '@testing-library/react';\r\nimport React from 'react'\r\nimport Cards from './Cards';\r\nimport {min,max} from './Colorselect';\r\n//import {text}  from './Search.js'\r\n//import Search from './Search.js'\r\n\r\n function CountryList({cards}) {\r\n   // const tree = props.text;\r\n //   const search =`${text ? text : 'test'}`\r\n   // const search = `${props.serachVal ? props.serachVal : ''}`\r\n   // console.log('')\r\n    // this.State({search : '' });  onClick={() => setFlip(!flip)}>\r\n  //  const [temp, setsearch] = useState(false)\r\n    \r\n   // const search1 = `${text ? setsearch(text) : ''}`\r\n  // console.log(search);\r\n //  console.log(props.serccc); \r\n    return (\r\n        \r\n        <div className=\"card-grid\">\r\n            {cards.filter(count => count.deaths > min && count.deaths < max)\r\n             .filter(cards => cards.countery.includes(''))           \r\n            .map(cards => {\r\n\r\n                // console.log(tree) ;\r\n              //   console.log(search);                                           \r\n             return (<Cards cards={cards} key={cards.id}/>)                \r\n           })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList\r\n\r\n// if ( cards.deaths > min && cards.deaths < max ){   count.deaths > min && count.deaths < max &&\r\n\r\n               // let filterd = cards.filter(cards => cards.country.includes('I'))"]},"metadata":{},"sourceType":"module"}